#  Example Qudi configuration file.
#
#
#
# IMPORTANT: The format of every 'module.Class' line has changed on 28.6.2015.
# =========  The class name now needs to be explicitly given here in the config.
#		  the config line must the form package.module.Class.ClassName
global:
    # list of modules to load when starting
    startup: ['man', 'tray']

    module_server:
        address: 'localhost'
        port: 12345

    ## For controlling the appearance of the GUI:
    stylesheet: 'qdark.qss'

hardware:

    timeharp:
        module.Class: 'picoquant.timeharp260.TimeHarp260'
        count_channel: 0
        input_CFD_discriminator: -50
        input_CFD_zero_cross: -10
        input_channel_offset: 0
        sync_CFD_discriminator: -50
        sync_CFD_zero_cross: -10
        sync_div: 1
        sync_channel_offset: 0

    science_camera:
        module.Class: 'camera.andor.Newton_940.Newton940'

    mynicard:
        module.Class: 'national_instruments_x_series.NationalInstrumentsXSeries'
        clock_channel: '/Dev1/Ctr0'

        counter_channels: ['/Dev1/Ctr2']

        scanner_clock_channel: '/Dev1/Ctr3'
        scanner_counter_channels: ['/Dev1/Ctr0']

        clock_frequency: 100
        scanner_clock_frequency: 100

        scanner_ao_channels: ['/Dev1/AO0', '/Dev1/AO1', '/Dev1/AO2']
        scanner_position_ranges: [[0,30e-6],[0,30e-6],[0,12e-6]]
        scanner_voltage_ranges: [[0,8],[0,8],[0,8]]

        photon_sources: ['/Dev1/PFI8']
        odmr_trigger_channel: '/Dev1/PFI13'
        gate_in_channel: '/Dev1/PFI13' # useless but has to be real

    mytemperature:
        module.Class: 'cryocon.Cryocon'
        ip_address: 192.168.0.101
        port: 5000

    shamrock:
        module.Class: 'spectrometer.shamrock_spectrometer.Shamrock'
        ## connect:
        ##    fitlogic: 'fitlogic'


    myfastcounter:
        module.Class: 'picoquant.timeharp260.TimeHarp260'
        #choose_trace: True
        #gated: False

    mydummypulser:
        module.Class: 'pulser_dummy.PulserDummy'

    microwave_dummy:
        module.Class: 'microwave.mw_source_dummy.MicrowaveDummy'
        gpib_address: 'dummy'
        gpib_timeout: 20


logic:

    kernellogic:
        module.Class: 'jupyterkernel.kernellogic.QudiKernelLogic'
        remoteaccess: True

    counterlogic:
        module.Class: 'counter_logic.CounterLogic'
        connect:
            counter1: 'timeharp'
            savelogic: 'savelogic'

    temperaturelogic:
        module.Class: 'pid_logic.PIDLogic'
        connect:
            controller: 'mytemperature'
            savelogic: 'savelogic'

    scannerlogic:
        module.Class: 'confocal_logic.ConfocalLogic'
        connect:
            confocalscanner1: 'timeharp_scanner_interfuse'
            savelogic: 'savelogic'

    timeharp_scanner_interfuse:
        module.Class: 'interfuse.counter_scanner_interfuse.CounterScannerInterfuse'
        connect:
            scanner_hardware: 'mynicard'
            counter_hardware: 'timeharp'

    optimizerlogic:
        module.Class: 'optimizer_logic.OptimizerLogic'
        connect:
            confocalscanner1: 'timeharp_scanner_interfuse'
            fitlogic: 'fitlogic'

    poimanagerlogic:
        module.Class: 'poi_manager_logic.PoiManagerLogic'
        connect:
            scannerlogic: 'scannerlogic'
            optimizer1: 'optimizerlogic'
            savelogic: 'savelogic'

    fitlogic:
        module.Class: 'fit_logic.FitLogic'

    savelogic:
        module.Class: 'save_logic.SaveLogic'
        win_data_directory: 'C:/Data'   # DO NOT CHANGE THE DIRECTORY HERE! ONLY IN THE CUSTOM FILE!
        unix_data_directory: 'Data/'
        log_into_daily_directory: True

    spectrumlogic:
        module.Class: 'spectrum.SpectrumLogic'
        connect:
            spectrometer: 'shamrock'
            savelogic: 'savelogic'
            odmrlogic: 'odmrlogic'
            fitlogic: 'fitlogic'

    camera_logic:
        module.Class: 'camera_logic.CameraLogic'
        connect:
            hardware: 'science_camera'
            savelogic: 'savelogic'

            
    pulsedmasterlogic:
        module.Class: 'pulsed.pulsed_master_logic.PulsedMasterLogic'
        connect:
            pulsedmeasurementlogic: 'pulsedmeasurementlogic'
            sequencegeneratorlogic: 'sequencegeneratorlogic'


    sequencegeneratorlogic:
        module.Class: 'pulsed.sequence_generator_logic.SequenceGeneratorLogic'
        #assets_storage_path: 'C:/Users/<username>/saved_pulsed_assets'
        #additional_predefined_methods_path: 'C:\\Custom_dir'  # optional
        #additional_sampling_functions_path: 'C:\\Custom_dir'  # optional
        #overhead_bytes: 4294967296  # Not properly implemented yet
        connect:
            pulsegenerator: 'mydummypulser'

    pulsedmeasurementlogic:
        module.Class: 'pulsed.pulsed_measurement_logic.PulsedMeasurementLogic'
        raw_data_save_type: 'text'  # optional
        #additional_extraction_path: 'C:\\Custom_dir\\Methods'  # optional
        #additional_analysis_path: 'C:\\Custom_dir\\Methods'  # optional
        connect:
            fastcounter: 'timeharp'
            pulsegenerator: 'mydummypulser'
            fitlogic: 'fitlogic'
            savelogic: 'savelogic'
            microwave: 'microwave_dummy'


gui:

    tray:
        module.Class: 'trayicon.TrayIcon'

    man:
        module.Class: 'manager.managergui.ManagerGui'

    temperature:
        module.Class: 'pidgui.pidgui.PIDGui'
        connect:
            pidlogic: 'temperaturelogic'

    counter:
        module.Class: 'counter.countergui.CounterGui'
        connect:
            counterlogic1: 'counterlogic'

    confocal:
        module.Class: 'confocal.confocalgui.ConfocalGui'
        connect:
            confocallogic1: 'scannerlogic'
            savelogic: 'savelogic'
            optimizerlogic1: 'optimizerlogic'
        fixed_aspect_ratio_xy: True
        fixed_aspect_ratio_depth: True
        slider_stepsize: 0.001  # in micrometer
        image_x_padding: 0.02
        image_y_padding: 0.02
        image_z_padding: 0.02
        default_meter_prefix: 'u'

    poimanager:
        module.Class: 'poimanager.poimangui.PoiManagerGui'
        connect:
            poimanagerlogic1: 'poimanagerlogic'
            confocallogic1: 'scannerlogic'

    spectrometer:
        module.Class: 'spectrometer.spectrometergui.SpectrometerGui'
        connect:
            spectrumlogic: 'spectrumlogic'

    camera_gui:
        module.Class: 'camera.cameragui.CameraGUI'
        connect:
            camera_logic: 'camera_logic'
            savelogic: 'savelogic'

    pulsedmeasurement:
        module.Class: 'pulsed.pulsed_maingui.PulsedMeasurementGui'
        connect:
            pulsedmasterlogic: 'pulsedmasterlogic'